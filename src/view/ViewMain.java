/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * Main.java
 *
 * Created on Mar 6, 2018, 4:39:12 PM
 */
package view;

import controller.AdminController;
import controller.HargaController;
import controller.MemberController;
import database.Database;
import enity.Admin;
import enity.Harga;
import enity.Member;
import error.AdminException;
import error.HargaException;
import error.MemberException;

import java.awt.Color;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.ButtonGroup;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JRadioButton;
import javax.swing.JTable;
import javax.swing.JTextField;
import model.AdminModel;
import model.HargaModel;

import model.MemberModel;
import model.TabelMemberModel;
import service.AdminDao;
import service.HargaDao;
import service.Service_member_dao;
import sound.Hime;

/**
 *
 * @author Admin
 */
public class ViewMain extends javax.swing.JFrame {

    private TabelMemberModel tabelmembermodel;
    private MemberController membercontroller;
    private MemberModel memberModel;
    private HargaController hargacontroller;
    private HargaModel hargaModel;
    private Hime sound;
    private AdminController adminController;
    private AdminModel adminModel;

//        public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//
//            public void run() {
//                try {
//                    new ViewMain().setVisible(true);
//                } catch (MemberException ex) {
//                    Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
//                } catch (SQLException ex) {
//                    Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        });
//    }
    /**
     * Creates new form Main
     */
    public ViewMain() throws MemberException, SQLException {
        tabelmembermodel = new TabelMemberModel();
        memberModel = new MemberModel();

        // Menghubungkan Controller member
        membercontroller = new MemberController();
        membercontroller.setModel(memberModel);
        // Menghubungkan Controller Harga
        hargaModel = new HargaModel();
        hargacontroller = new HargaController();
        hargacontroller.setHargaModel(hargaModel);
        // Menghubungkan Controller admin
        adminModel = new AdminModel();
        adminController = new AdminController();
        adminController.setAdminModel(adminModel);

        sound = new Hime();
        sound.hime();
        initComponents();
        tabelmember.setModel(tabelmembermodel);

        groupRadio();
        countMember();
        loadDatatabel();
        reportcmbReset();

        setExtendedState(JFrame.MAXIMIZED_HORIZ);
        setVisible(true);
        setResizable(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bodyPanel = new javax.swing.JPanel();
        btnLogout = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        menuPanel = new javax.swing.JPanel();
        btnHome = new javax.swing.JButton();
        btnCheck = new javax.swing.JButton();
        btnMember = new javax.swing.JButton();
        btnPrice = new javax.swing.JButton();
        btnReport = new javax.swing.JButton();
        btnPassword = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        valuePanel = new javax.swing.JPanel();
        homePanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        totalMember = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        totalPendapatan = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        labelLaki = new javax.swing.JLabel();
        labelPerempuan = new javax.swing.JLabel();
        labelHomeVip = new javax.swing.JLabel();
        labelHomeStd = new javax.swing.JLabel();
        labelHomeKsng = new javax.swing.JLabel();
        labelHome50Mbps = new javax.swing.JLabel();
        labelHome30Mbps = new javax.swing.JLabel();
        labelHome20Mbps = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        checkPanel = new javax.swing.JPanel();
        labelNama = new javax.swing.JLabel();
        labelJk = new javax.swing.JLabel();
        labelAlamat = new javax.swing.JLabel();
        labelSewa = new javax.swing.JLabel();
        labelNohp = new javax.swing.JLabel();
        labelTipekamar = new javax.swing.JLabel();
        labelWifi = new javax.swing.JLabel();
        valueNohp = new javax.swing.JTextField();
        valueSewa = new javax.swing.JTextField();
        valueAlamat = new javax.swing.JTextField();
        valueNama = new javax.swing.JTextField();
        radiobVip = new javax.swing.JRadioButton();
        radiobStandard = new javax.swing.JRadioButton();
        radiobEmpty = new javax.swing.JRadioButton();
        radiob50 = new javax.swing.JRadioButton();
        radiob30 = new javax.swing.JRadioButton();
        radiob20 = new javax.swing.JRadioButton();
        radiobLaki = new javax.swing.JRadioButton();
        radiobperempuan = new javax.swing.JRadioButton();
        panelInfo = new javax.swing.JPanel();
        labelheaderkamar = new javax.swing.JLabel();
        labelvip = new javax.swing.JLabel();
        labelstandard = new javax.swing.JLabel();
        labelNama4 = new javax.swing.JLabel();
        labelNama5 = new javax.swing.JLabel();
        labelvip1 = new javax.swing.JLabel();
        labelstandard1 = new javax.swing.JLabel();
        labelheaderkamar1 = new javax.swing.JLabel();
        labelVvip = new javax.swing.JLabel();
        labelVstd = new javax.swing.JLabel();
        labelVkosong = new javax.swing.JLabel();
        labelV30 = new javax.swing.JLabel();
        labelV50 = new javax.swing.JLabel();
        labelV20 = new javax.swing.JLabel();
        btnResetc = new javax.swing.JButton();
        labelTotal = new javax.swing.JLabel();
        outputTotal = new javax.swing.JLabel();
        btnHitungc = new javax.swing.JButton();
        btnsimpan = new javax.swing.JButton();
        pricePanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        ivip = new javax.swing.JTextField();
        istd = new javax.swing.JTextField();
        iemp = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        ih20 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        ih30 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        ih50 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        memberPanel = new javax.swing.JPanel();
        btnEditDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelmember = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        valueCari = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        Output_pencarian = new javax.swing.JTextArea();
        reportPanel = new javax.swing.JPanel();
        rBg = new javax.swing.JPanel();
        cmbJumlahData = new javax.swing.JComboBox<>();
        reportCek = new javax.swing.JTextField();
        cmbTipekamar = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        dccAwal = new datechooser.beans.DateChooserCombo();
        jLabel24 = new javax.swing.JLabel();
        rData = new javax.swing.JLabel();
        dccAkhir = new datechooser.beans.DateChooserCombo();
        jLabel23 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        btnResetReport = new javax.swing.JButton();
        passwordPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        txtPasswordLama = new javax.swing.JPasswordField();
        txtPasswordBaru = new javax.swing.JPasswordField();
        txtValidPassword = new javax.swing.JPasswordField();
        txtChangeP = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("KosanBook");
        setUndecorated(true);

        bodyPanel.setBackground(new java.awt.Color(-32768,true));

        btnLogout.setBackground(new java.awt.Color(-47616,true));
        btnLogout.setForeground(new java.awt.Color(-32768,true));
        btnLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons8-shutdown-26.png"))); // NOI18N
        btnLogout.setBorder(null);
        btnLogout.setBorderPainted(false);
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        title.setFont(new java.awt.Font("SansSerif", 0, 48));
        title.setForeground(new java.awt.Color(-657670,true));
        title.setText("Kosan Book");

        menuPanel.setBackground(new java.awt.Color(-47616,true));

        btnHome.setBackground(new java.awt.Color(-657670,true));
        btnHome.setFont(new java.awt.Font("Dialog", 1, 18));
        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons8-home-button-filled-50.png"))); // NOI18N
        btnHome.setText("Home");
        btnHome.setBorder(null);
        btnHome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHome.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnHome.setIconTextGap(15);
        btnHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnHomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnHomeMouseExited(evt);
            }
        });
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnCheck.setBackground(new java.awt.Color(-657670,true));
        btnCheck.setFont(new java.awt.Font("Dialog", 1, 18));
        btnCheck.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons8-audit-filled-50.png"))); // NOI18N
        btnCheck.setText("Check In");
        btnCheck.setBorder(null);
        btnCheck.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCheck.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnCheck.setIconTextGap(15);
        btnCheck.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCheckMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCheckMouseExited(evt);
            }
        });
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });

        btnMember.setBackground(new java.awt.Color(-657670,true));
        btnMember.setFont(new java.awt.Font("Dialog", 1, 18));
        btnMember.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons8-user-groups-filled-50.png"))); // NOI18N
        btnMember.setText("Member");
        btnMember.setBorder(null);
        btnMember.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMember.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnMember.setIconTextGap(15);
        btnMember.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnMemberMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnMemberMouseExited(evt);
            }
        });
        btnMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMemberActionPerformed(evt);
            }
        });

        btnPrice.setBackground(new java.awt.Color(-657670,true));
        btnPrice.setFont(new java.awt.Font("Dialog", 1, 18));
        btnPrice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons8-us-dollar-filled-50.png"))); // NOI18N
        btnPrice.setText("Price Setting");
        btnPrice.setBorder(null);
        btnPrice.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPrice.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnPrice.setIconTextGap(15);
        btnPrice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPriceMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnPriceMouseExited(evt);
            }
        });
        btnPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPriceActionPerformed(evt);
            }
        });

        btnReport.setBackground(new java.awt.Color(-657670,true));
        btnReport.setFont(new java.awt.Font("Dialog", 1, 18));
        btnReport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons8-report-card-filled-50.png"))); // NOI18N
        btnReport.setText("Report");
        btnReport.setBorder(null);
        btnReport.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReport.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnReport.setIconTextGap(15);
        btnReport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnReportMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnReportMouseExited(evt);
            }
        });
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });

        btnPassword.setBackground(new java.awt.Color(-657670,true));
        btnPassword.setFont(new java.awt.Font("Dialog", 1, 18));
        btnPassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons8-secure-filled-50.png"))); // NOI18N
        btnPassword.setText("Password");
        btnPassword.setBorder(null);
        btnPassword.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPassword.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnPassword.setIconTextGap(15);
        btnPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPasswordMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnPasswordMouseExited(evt);
            }
        });
        btnPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPasswordActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Untitled-1.png"))); // NOI18N

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnMember, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCheck, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnHome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1)))
                .addContainerGap())
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnMember, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnReport, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(89, Short.MAX_VALUE))
        );

        valuePanel.setBackground(new java.awt.Color(-15598,true));
        valuePanel.setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(-1,true));

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel6.setText("Member");

        totalMember.setFont(new java.awt.Font("Dialog", 1, 48));
        totalMember.setText("0");
        totalMember.setAlignmentY(0.0F);
        totalMember.setPreferredSize(new java.awt.Dimension(10, 24));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(totalMember, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(totalMember, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        jPanel2.setBackground(new java.awt.Color(-1,true));

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel7.setText("Total Pendapatan");

        totalPendapatan.setFont(new java.awt.Font("Dialog", 1, 48));
        totalPendapatan.setText("0");
        totalPendapatan.setAlignmentY(0.0F);
        totalPendapatan.setPreferredSize(new java.awt.Dimension(10, 24));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 87, Short.MAX_VALUE)
                .addComponent(totalPendapatan, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel7)
                .addGap(29, 29, 29)
                .addComponent(totalPendapatan, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(-1,true));

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel8.setText("<html> <u>Laporang Data Paket Favorit</ui> <html>");

        labelLaki.setFont(new java.awt.Font("Dialog", 0, 18));
        labelLaki.setText("Pria = 0 Penghuni");

        labelPerempuan.setFont(new java.awt.Font("Dialog", 0, 18));
        labelPerempuan.setText("Perempuan = 0 Penghuni");

        labelHomeVip.setFont(new java.awt.Font("Dialog", 0, 18));
        labelHomeVip.setText("VIP = 0 Penghuni");

        labelHomeStd.setFont(new java.awt.Font("Dialog", 0, 18));
        labelHomeStd.setText("Standart = 0 Penghuni");

        labelHomeKsng.setFont(new java.awt.Font("Dialog", 0, 18));
        labelHomeKsng.setText("Kosong = 0 Penghuni");

        labelHome50Mbps.setFont(new java.awt.Font("Dialog", 0, 18));
        labelHome50Mbps.setText("50Mbps = 0 Penghuni");

        labelHome30Mbps.setFont(new java.awt.Font("Dialog", 0, 18));
        labelHome30Mbps.setText("30Mbps = 0 Penghuni");

        labelHome20Mbps.setFont(new java.awt.Font("Dialog", 0, 18));
        labelHome20Mbps.setText("20Mbps = 0 Penghuni");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/m-chan.gif"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelPerempuan, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelLaki, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelHome20Mbps, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelHome30Mbps, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelHomeVip, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelHomeStd, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelHomeKsng, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelHome50Mbps, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(104, 104, 104))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelLaki)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelPerempuan)
                                .addGap(23, 23, 23)
                                .addComponent(labelHomeVip)
                                .addGap(1, 1, 1)
                                .addComponent(labelHomeStd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelHomeKsng)
                                .addGap(38, 38, 38)
                                .addComponent(labelHome50Mbps))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelHome30Mbps, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelHome20Mbps, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout homePanelLayout = new javax.swing.GroupLayout(homePanel);
        homePanel.setLayout(homePanelLayout);
        homePanelLayout.setHorizontalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(homePanelLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        homePanelLayout.setVerticalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        valuePanel.add(homePanel, "card2");

        labelNama.setFont(new java.awt.Font("Dialog", 0, 18));
        labelNama.setText("Nama");

        labelJk.setFont(new java.awt.Font("Dialog", 0, 18));
        labelJk.setText("Jenis Kelamin");

        labelAlamat.setFont(new java.awt.Font("Dialog", 0, 18));
        labelAlamat.setText("Alamat");

        labelSewa.setFont(new java.awt.Font("Dialog", 0, 18));
        labelSewa.setText("Sewa/bulan*");

        labelNohp.setFont(new java.awt.Font("Dialog", 0, 18));
        labelNohp.setText("No. Hp (08)");

        labelTipekamar.setFont(new java.awt.Font("Dialog", 0, 18));
        labelTipekamar.setText("Tipe Kamar");

        labelWifi.setFont(new java.awt.Font("Dialog", 0, 18));
        labelWifi.setText("Wi-Fi");

        valueNohp.setText("08");
        valueNohp.setBorder(null);
        valueNohp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                valueNohpFocusGained(evt);
            }
        });
        valueNohp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                valueNohpKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                valueNohpKeyTyped(evt);
            }
        });

        valueSewa.setBorder(null);
        valueSewa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                valueSewaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                valueSewaKeyTyped(evt);
            }
        });

        valueAlamat.setBorder(null);
        valueAlamat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valueAlamatActionPerformed(evt);
            }
        });
        valueAlamat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                valueAlamatKeyReleased(evt);
            }
        });

        valueNama.setBorder(null);
        valueNama.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                valueNamaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                valueNamaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                valueNamaKeyTyped(evt);
            }
        });

        radiobVip.setText("VIP");
        radiobVip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiobVipActionPerformed(evt);
            }
        });

        radiobStandard.setText("Standard");
        radiobStandard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiobStandardActionPerformed(evt);
            }
        });

        radiobEmpty.setText("Empty");
        radiobEmpty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiobEmptyActionPerformed(evt);
            }
        });

        radiob50.setText("50 Mbps");
        radiob50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiob50ActionPerformed(evt);
            }
        });

        radiob30.setText("30 Mbps");
        radiob30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiob30ActionPerformed(evt);
            }
        });

        radiob20.setText("20 Mbps");
        radiob20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiob20ActionPerformed(evt);
            }
        });

        radiobLaki.setText("Laki-Laki");
        radiobLaki.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiobLakiActionPerformed(evt);
            }
        });

        radiobperempuan.setText("Perempuan");

        panelInfo.setBackground(new java.awt.Color(-1,true));

        labelheaderkamar.setFont(new java.awt.Font("Dialog", 1, 14));
        labelheaderkamar.setText("Tipe Kamar");

        labelvip.setFont(new java.awt.Font("Dialog", 0, 14));
        labelvip.setText("VIP");

        labelstandard.setFont(new java.awt.Font("Dialog", 0, 14));
        labelstandard.setText("Standard");

        labelNama4.setFont(new java.awt.Font("Dialog", 0, 14));
        labelNama4.setText("Kosong");

        labelNama5.setFont(new java.awt.Font("Dialog", 0, 14));
        labelNama5.setText("20Mbps");

        labelvip1.setFont(new java.awt.Font("Dialog", 0, 14));
        labelvip1.setText("50Mbps");

        labelstandard1.setFont(new java.awt.Font("Dialog", 0, 14));
        labelstandard1.setText("30Mbps");

        labelheaderkamar1.setFont(new java.awt.Font("Dialog", 1, 14));
        labelheaderkamar1.setText("Tipe Wi-Fi");

        labelVvip.setText("0");

        labelVstd.setText("0");

        labelVkosong.setText("0");

        labelV30.setText("0");

        labelV50.setText("0");

        labelV20.setText("0");

        javax.swing.GroupLayout panelInfoLayout = new javax.swing.GroupLayout(panelInfo);
        panelInfo.setLayout(panelInfoLayout);
        panelInfoLayout.setHorizontalGroup(
            panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInfoLayout.createSequentialGroup()
                        .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelstandard, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelvip1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelstandard1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelNama5, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelvip, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelInfoLayout.createSequentialGroup()
                                .addComponent(labelVvip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(45, 45, 45))
                            .addGroup(panelInfoLayout.createSequentialGroup()
                                .addComponent(labelVstd, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                                .addGap(59, 59, 59))
                            .addComponent(labelV50, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(panelInfoLayout.createSequentialGroup()
                                .addComponent(labelV30, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                                .addGap(14, 14, 14))
                            .addGroup(panelInfoLayout.createSequentialGroup()
                                .addComponent(labelV20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(7, 7, 7))))
                    .addGroup(panelInfoLayout.createSequentialGroup()
                        .addComponent(labelNama4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelVkosong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(52, 52, 52))
                    .addGroup(panelInfoLayout.createSequentialGroup()
                        .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelheaderkamar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelheaderkamar1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        panelInfoLayout.setVerticalGroup(
            panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelheaderkamar, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelvip, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelVvip))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelstandard, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelVstd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNama4)
                    .addComponent(labelVkosong))
                .addGap(70, 70, 70)
                .addComponent(labelheaderkamar1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInfoLayout.createSequentialGroup()
                        .addComponent(labelvip1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelstandard1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelV30))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelNama5)
                            .addComponent(labelV20)))
                    .addComponent(labelV50))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnResetc.setBackground(new java.awt.Color(-1,true));
        btnResetc.setText("Reset");
        btnResetc.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnResetc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetcActionPerformed(evt);
            }
        });

        labelTotal.setBackground(new java.awt.Color(-1,true));
        labelTotal.setFont(new java.awt.Font("Dialog", 0, 18));
        labelTotal.setText("Total Rp.");

        outputTotal.setBackground(new java.awt.Color(-1,true));
        outputTotal.setFont(new java.awt.Font("Dialog", 0, 18));
        outputTotal.setText("0");

        btnHitungc.setBackground(new java.awt.Color(-1,true));
        btnHitungc.setText("Count");
        btnHitungc.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnHitungc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHitungcActionPerformed(evt);
            }
        });

        btnsimpan.setBackground(new java.awt.Color(-1,true));
        btnsimpan.setText("Simpan");
        btnsimpan.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnsimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsimpanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout checkPanelLayout = new javax.swing.GroupLayout(checkPanel);
        checkPanel.setLayout(checkPanelLayout);
        checkPanelLayout.setHorizontalGroup(
            checkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(checkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(checkPanelLayout.createSequentialGroup()
                        .addComponent(labelTotal)
                        .addGap(18, 18, 18)
                        .addComponent(outputTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51))
                    .addGroup(checkPanelLayout.createSequentialGroup()
                        .addGroup(checkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(checkPanelLayout.createSequentialGroup()
                                .addGroup(checkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelNama)
                                    .addComponent(labelSewa)
                                    .addComponent(labelAlamat)
                                    .addComponent(labelJk)
                                    .addComponent(labelWifi)
                                    .addGroup(checkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(labelNohp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(labelTipekamar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(36, 36, 36)
                                .addGroup(checkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(checkPanelLayout.createSequentialGroup()
                                        .addComponent(radiobLaki)
                                        .addGap(18, 18, 18)
                                        .addComponent(radiobperempuan))
                                    .addComponent(valueSewa, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                                    .addComponent(valueAlamat)
                                    .addComponent(valueNama)
                                    .addComponent(valueNohp)
                                    .addGroup(checkPanelLayout.createSequentialGroup()
                                        .addGroup(checkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(radiob50)
                                            .addComponent(radiobVip))
                                        .addGap(2, 2, 2)
                                        .addGroup(checkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(radiobStandard)
                                            .addComponent(radiob30))
                                        .addGap(18, 18, 18)
                                        .addGroup(checkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(radiob20, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(radiobEmpty, javax.swing.GroupLayout.Alignment.LEADING)))))
                            .addGroup(checkPanelLayout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(btnsimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(btnResetc, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnHitungc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(panelInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        checkPanelLayout.setVerticalGroup(
            checkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkPanelLayout.createSequentialGroup()
                .addGroup(checkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(checkPanelLayout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addGroup(checkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(valueNama)
                            .addComponent(labelNama))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(checkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(checkPanelLayout.createSequentialGroup()
                                .addComponent(labelJk)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelAlamat)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelSewa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelNohp))
                            .addGroup(checkPanelLayout.createSequentialGroup()
                                .addGroup(checkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(radiobLaki)
                                    .addComponent(radiobperempuan))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(valueAlamat)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(valueSewa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(valueNohp)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(checkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(checkPanelLayout.createSequentialGroup()
                                .addGroup(checkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelTipekamar)
                                    .addGroup(checkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(radiobVip)
                                        .addComponent(radiobEmpty)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(checkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(checkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(radiob50)
                                        .addComponent(radiob20)
                                        .addComponent(radiob30))
                                    .addComponent(labelWifi)))
                            .addComponent(radiobStandard))
                        .addGap(26, 26, 26)
                        .addGroup(checkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnResetc)
                            .addComponent(btnHitungc, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnsimpan))
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, checkPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)))
                .addGroup(checkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTotal)
                    .addComponent(outputTotal))
                .addGap(94, 94, 94))
        );

        valuePanel.add(checkPanel, "card3");

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel9.setText("VIP");

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel10.setText("Harga Sewa Kamar");

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel11.setText("Standard");

        jLabel12.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel12.setText("Empty");

        ivip.setBorder(null);

        istd.setBorder(null);

        iemp.setBorder(null);

        jLabel13.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel13.setText("Harga Sewa Wi-Fi");

        ih20.setBorder(null);

        jLabel14.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel14.setText("20 Mbps");

        jLabel15.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel15.setText("30 Mbps");

        ih30.setBorder(null);
        ih30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ih30ActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel16.setText("50 Mbps");

        ih50.setBorder(null);

        jButton6.setBackground(new java.awt.Color(-1,true));
        jButton6.setText("Save");
        jButton6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        cancel.setBackground(new java.awt.Color(-1,true));
        cancel.setText("Cancel");
        cancel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pricePanelLayout = new javax.swing.GroupLayout(pricePanel);
        pricePanel.setLayout(pricePanelLayout);
        pricePanelLayout.setHorizontalGroup(
            pricePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pricePanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pricePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pricePanelLayout.createSequentialGroup()
                        .addGroup(pricePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addGap(40, 40, 40)
                        .addGroup(pricePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(iemp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                            .addComponent(istd, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ivip)))
                    .addGroup(pricePanelLayout.createSequentialGroup()
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel10)
                    .addComponent(jLabel13)
                    .addGroup(pricePanelLayout.createSequentialGroup()
                        .addGroup(pricePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15)
                            .addComponent(jLabel14))
                        .addGap(50, 50, 50)
                        .addGroup(pricePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ih20, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                            .addComponent(ih30)
                            .addComponent(ih50))))
                .addContainerGap())
        );
        pricePanelLayout.setVerticalGroup(
            pricePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pricePanelLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pricePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ivip)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pricePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(istd)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pricePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(iemp)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pricePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ih50))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pricePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ih30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pricePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(ih20, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pricePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel)
                    .addComponent(jButton6))
                .addGap(171, 171, 171))
        );

        valuePanel.add(pricePanel, "card5");

        btnEditDelete.setBackground(new java.awt.Color(-1,true));
        btnEditDelete.setText("Edit / Delete");
        btnEditDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditDeleteActionPerformed(evt);
            }
        });

        tabelmember.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nama", "Total Biaya", "Tenggang Waktu", "Title 4", "Title 5"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Float.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabelmember.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tabelmember.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(tabelmember);

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel3.setText("Cari");

        valueCari.setBorder(null);
        valueCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                valueCariKeyReleased(evt);
            }
        });

        Output_pencarian.setColumns(20);
        Output_pencarian.setRows(5);
        Output_pencarian.setBorder(null);
        jScrollPane3.setViewportView(Output_pencarian);

        javax.swing.GroupLayout memberPanelLayout = new javax.swing.GroupLayout(memberPanel);
        memberPanel.setLayout(memberPanelLayout);
        memberPanelLayout.setHorizontalGroup(
            memberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(memberPanelLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(memberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE)
                    .addGroup(memberPanelLayout.createSequentialGroup()
                        .addGroup(memberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(memberPanelLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(valueCari, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 44, Short.MAX_VALUE)))
                .addGap(34, 34, 34))
            .addGroup(memberPanelLayout.createSequentialGroup()
                .addGap(396, 396, 396)
                .addComponent(btnEditDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        memberPanelLayout.setVerticalGroup(
            memberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, memberPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(memberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(valueCari, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEditDelete)
                .addGap(75, 75, 75))
        );

        valuePanel.add(memberPanel, "card4");

        rBg.setBackground(new java.awt.Color(255, 255, 255));

        cmbJumlahData.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        reportCek.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                reportCekKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                reportCekKeyTyped(evt);
            }
        });

        cmbTipekamar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel19.setText("Pencarian");

        jLabel21.setText("Jumlah Data*");

        jLabel22.setText("Tipe Kamar");

        try {
            dccAwal.setDefaultPeriods(new datechooser.model.multiple.PeriodSet());
        } catch (datechooser.model.exeptions.IncompatibleDataExeption e1) {
            e1.printStackTrace();
        }

        jLabel24.setFont(new java.awt.Font("Magneto", 1, 18)); // NOI18N
        jLabel24.setText("Kategori Cetak");

        rData.setText("0");

        try {
            dccAkhir.setDefaultPeriods(new datechooser.model.multiple.PeriodSet());
        } catch (datechooser.model.exeptions.IncompatibleDataExeption e1) {
            e1.printStackTrace();
        }

        jLabel23.setText("Tanggal Awal");

        jLabel25.setText("-");

        javax.swing.GroupLayout rBgLayout = new javax.swing.GroupLayout(rBg);
        rBg.setLayout(rBgLayout);
        rBgLayout.setHorizontalGroup(
            rBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rBgLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(rBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(rBgLayout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(57, 57, 57)
                        .addComponent(dccAwal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(rBgLayout.createSequentialGroup()
                        .addGroup(rBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE))
                        .addGap(61, 61, 61)
                        .addGroup(rBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbJumlahData, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reportCek)
                            .addComponent(cmbTipekamar, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(rBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rData, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(rBgLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dccAkhir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(140, Short.MAX_VALUE))
            .addGroup(rBgLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        rBgLayout.setVerticalGroup(
            rBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rBgLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(rBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reportCek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(rData, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(rBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbJumlahData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(rBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rBgLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(rBgLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbTipekamar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(rBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rBgLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(rBgLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(rBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dccAwal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dccAkhir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        jButton8.setBackground(new java.awt.Color(-1,true));
        jButton8.setText("Cetak Data Penghuni");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        btnResetReport.setBackground(new java.awt.Color(-1,true));
        btnResetReport.setText("Reset");
        btnResetReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetReportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout reportPanelLayout = new javax.swing.GroupLayout(reportPanel);
        reportPanel.setLayout(reportPanelLayout);
        reportPanelLayout.setHorizontalGroup(
            reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(btnResetReport, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reportPanelLayout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(rBg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        reportPanelLayout.setVerticalGroup(
            reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(rBg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnResetReport, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(145, Short.MAX_VALUE))
        );

        valuePanel.add(reportPanel, "card6");

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel5.setText("Password Lama");

        jLabel17.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel17.setText("Password Baru");

        jLabel18.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel18.setText("Konfirmasi Password");

        jButton2.setBackground(new java.awt.Color(-1,true));
        jButton2.setText("Change Password");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        txtPasswordLama.setBorder(null);

        txtPasswordBaru.setBorder(null);

        txtValidPassword.setBorder(null);

        txtChangeP.setFont(new java.awt.Font("Dialog", 0, 18));
        txtChangeP.setText("00-00-0000");

        jLabel20.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel20.setText("Last Change =");

        javax.swing.GroupLayout passwordPanelLayout = new javax.swing.GroupLayout(passwordPanel);
        passwordPanel.setLayout(passwordPanelLayout);
        passwordPanelLayout.setHorizontalGroup(
            passwordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passwordPanelLayout.createSequentialGroup()
                .addGroup(passwordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(passwordPanelLayout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addGroup(passwordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, passwordPanelLayout.createSequentialGroup()
                                .addGroup(passwordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel18))
                                .addGap(29, 29, 29)
                                .addGroup(passwordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtValidPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPasswordLama, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPasswordBaru, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(passwordPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel20)
                        .addGap(18, 18, 18)
                        .addComponent(txtChangeP, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(186, Short.MAX_VALUE))
        );
        passwordPanelLayout.setVerticalGroup(
            passwordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passwordPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(passwordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtChangeP)
                    .addComponent(jLabel20))
                .addGap(147, 147, 147)
                .addGroup(passwordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txtPasswordLama, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(passwordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(passwordPanelLayout.createSequentialGroup()
                        .addComponent(txtPasswordBaru, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1))
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(passwordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtValidPassword))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(253, 253, 253))
        );

        valuePanel.add(passwordPanel, "card7");

        javax.swing.GroupLayout bodyPanelLayout = new javax.swing.GroupLayout(bodyPanel);
        bodyPanel.setLayout(bodyPanelLayout);
        bodyPanelLayout.setHorizontalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(valuePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(bodyPanelLayout.createSequentialGroup()
                        .addComponent(title)
                        .addGap(331, 331, 331)
                        .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        bodyPanelLayout.setVerticalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(title)
                    .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(valuePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(bodyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(922, 655));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
void reportcmbReset() {
        //setfield
         rData.setText("0 Data");
        dccAkhir.setSelectedDate(null);
        dccAwal.setSelectedDate(null);

        // set comboBox jumlah data//
        cmbJumlahData.removeAllItems();
        cmbJumlahData.addItem("--Pilih Jumlah Data--");
        cmbJumlahData.addItem("5");
        cmbJumlahData.addItem("10");
        cmbJumlahData.addItem("15");
        cmbJumlahData.addItem("20");
        cmbJumlahData.setSelectedIndex(0);
        //-----------------------------------//

        //set ComboBox tipeKamar//
        cmbTipekamar.removeAllItems();
        cmbTipekamar.addItem("--Pilih Jenis Kamar--");
        cmbTipekamar.addItem("VIP");
        cmbTipekamar.addItem("Standart");
        cmbTipekamar.addItem("Kosong");
        cmbTipekamar.setSelectedIndex(0);
        //-----------------------------------//
    }

    //Section FormCheckIN
    public void countMember() throws MemberException, SQLException {
//        deklrasi variabel untuk jtext
        int countLaki = 0,
                countPerempuan = 0,
                countVip = 0,
                countStd = 0,
                countKosong = 0,
                count50 = 0,
                count30 = 0,
                count20 = 0;
        int countm = 0;
        Service_member_dao member = Database.getMemberDao();
        List<Member> listmember = member.selectallmember();
        int tp = 0;
        //menhitung jumlah list
        for (Member value : listmember) {
            countm += 1;
            tp += value.getTotal();
            if ("Pria".equals(value.getJenis_kelamin())) {
                countLaki += 1;
            }
            if ("Wanita".equals(value.getJenis_kelamin())) {
                countPerempuan += 1;
            }
            if ("VIP".equals(value.getTipe_kamar())) {
                countVip += 1;
//                System.out.println("True");
            }
            if ("Standar".equals(value.getTipe_kamar())) {
                countStd += 1;
            }
            if ("Kosong".equals(value.getTipe_kamar())) {
                countKosong += 1;
            }
            if ("50Mbps".equals(value.getTipe_wifi())) {
                count50 += 1;
            }
            if ("30Mbps".equals(value.getTipe_wifi())) {
                count30 += 1;
            }
            if ("20Mbps".equals(value.getTipe_wifi())) {
                count20 += 1;
            }

            if (tp != 0) {
                StringBuffer sb = new StringBuffer(Integer.toString(tp));
                if (sb.length() >= 0 && sb.length() <= 6) {
                    sb.insert(3, ".");
                } else if (sb.length() == 7) {
                    sb.insert(5, ".");
                } else if (sb.length() == 8) {
                    sb.insert(2, ".");
                    sb.insert(6, ".");
                } else if (sb.length() == 9) {
                    sb.insert(3, ".");
                    sb.insert(7, ".");
                } else if (sb.length() == 10) {
                    sb.insert(1, ".");
                    sb.insert(5, ".");
                    sb.insert(9, ".");
                }
                // set value ke jtext
                totalMember.setText(Integer.toString(countm));
                totalPendapatan.setText("Rp. " + sb.toString());
                labelLaki.setText("Pria = " + countLaki + " Penghuni");
                labelPerempuan.setText("Wanita = " + countPerempuan + " Penghuni");
                labelHomeVip.setText("VIP \t\t= " + countVip + " Penghuni");
                labelHomeStd.setText("Standart = " + countStd + " Penghuni");
                labelHomeKsng.setText("Kosong = " + countKosong + " Penghuni");
                labelHome50Mbps.setText("50Mbps = " + count50 + " Penghuni");
                labelHome30Mbps.setText("30Mbps = " + count30 + " Penghuni");
                labelHome20Mbps.setText("20Mbps = " + count20 + " Penghuni");
            }

        }
    }

    private void lastC() throws SQLException, AdminException {
        //ambil data password lama
        String tgl = null;
        AdminDao daolist = Database.getAdminDao();
        List<Admin> aa = daolist.listAdmin();
        for (Admin n : aa) {
            tgl = n.getTgl_login();
        }
        txtChangeP.setText(tgl);
    }

    private void loadDatatabel() throws SQLException, MemberException {
        Service_member_dao member = Database.getMemberDao();
        tabelmembermodel.setList(member.selectallmember());
    }
    // deklarasi global group
    ButtonGroup bg1 = new ButtonGroup();
    ButtonGroup bg2 = new ButtonGroup();
    ButtonGroup bg3 = new ButtonGroup();

    private void groupRadio() {
        Output_pencarian.setEditable(false);
        bg1.add(getRadiobVip());
        bg1.add(getRadiobStandard());
        bg1.add(getRadiobEmpty());
        bg2.add(getRadiob50());
        bg2.add(getRadiob30());
        bg2.add(getRadiob20());
        bg3.add(getRadiobLaki());
        bg3.add(getRadiobperempuan());
    }

    public ButtonGroup getBg1() {
        return bg1;
    }

    public ButtonGroup getBg2() {
        return bg2;
    }

    public ButtonGroup getBg3() {
        return bg3;
    }

    public JTextField getIemp() {
        return iemp;
    }

    public JTextField getIh20() {
        return ih20;
    }

    public JTextField getIh30() {
        return ih30;
    }

    public JTextField getIh50() {
        return ih50;
    }

    public JTextField getIstd() {
        return istd;
    }

    public JTextField getIvip() {
        return ivip;
    }

    public void setRadiob20(JRadioButton radiob20) {
        this.radiob20 = radiob20;
    }

    public void setRadiob30(JRadioButton radiob30) {
        this.radiob30 = radiob30;
    }

    public void setRadiob50(JRadioButton radiob50) {
        this.radiob50 = radiob50;
    }

    public void setRadiobEmpty(JRadioButton radiobEmpty) {
        this.radiobEmpty = radiobEmpty;
    }

    public void setRadiobLaki(JRadioButton radiobLaki) {
        this.radiobLaki = radiobLaki;
    }

    public void setRadiobStandard(JRadioButton radiobStandard) {
        this.radiobStandard = radiobStandard;
    }

    public void setRadiobVip(JRadioButton radiobVip) {
        this.radiobVip = radiobVip;
    }

    public void setRadiobperempuan(JRadioButton radiobperempuan) {
        this.radiobperempuan = radiobperempuan;
    }

    public void setValueAlamat(JTextField valueAlamat) {
        this.valueAlamat = valueAlamat;
    }

    public void setValueNama(JTextField valueNama) {
        this.valueNama = valueNama;
    }

    public void setValueNohp(JTextField valueNohp) {
        this.valueNohp = valueNohp;
    }

    //akhir Section FormCheckIN
    public void setValueSewa(JTextField valueSewa) {
        this.valueSewa = valueSewa;
    }

    public JTable getTabelmember() {
        return tabelmember;
    }

    public JLabel getOutputTotal() {
        return outputTotal;
    }

    public JRadioButton getRadiob20() {
        return radiob20;
    }

    public JRadioButton getRadiob30() {
        return radiob30;
    }

    public JRadioButton getRadiob50() {
        return radiob50;
    }

    public JRadioButton getRadiobEmpty() {
        return radiobEmpty;
    }

    public JRadioButton getRadiobLaki() {
        return radiobLaki;
    }

    public JRadioButton getRadiobStandard() {
        return radiobStandard;
    }

    public JRadioButton getRadiobVip() {
        return radiobVip;
    }

    public JRadioButton getRadiobperempuan() {
        return radiobperempuan;
    }

    public JTextField getValueAlamat() {
        return valueAlamat;
    }

    public JTextField getValueNama() {
        return valueNama;
    }

    public JTextField getValueNohp() {
        return valueNohp;
    }

    public JTextField getValueSewa() {
        return valueSewa;
    }

    public JPasswordField getTxtPasswordBaru() {
        return txtPasswordBaru;
    }

    public JPasswordField getTxtPasswordLama() {
        return txtPasswordLama;
    }

    public JPasswordField getTxtValidPassword() {
        return txtValidPassword;
    }
//    Section Awal Tampilan
    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        try {
            // TODO add your handling code here:
            countMember();
        } catch (MemberException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        }

        // sound /
        sound.soundClick();
        //remove panel
        menuPanel.setBackground(new Color(255, 70, 0));
        bodyPanel.setBackground(new Color(255, 128, 0));
        btnLogout.setBackground(new Color(255, 70, 0));
        valuePanel.removeAll();
        valuePanel.repaint();
        valuePanel.revalidate();

        //add panel
        valuePanel.add(homePanel);
        valuePanel.repaint();
        valuePanel.revalidate();
}//GEN-LAST:event_btnHomeActionPerformed

    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        // TODO add your handling code here:
        bodyPanel.setBackground(new Color(45, 152, 218));
        menuPanel.setBackground(new Color(56, 103, 214));
        btnLogout.setBackground(new Color(56, 103, 214));

        // sound /
        sound.soundClick();
        //remove panel
        valuePanel.removeAll();
        valuePanel.repaint();
        valuePanel.revalidate();

        //add panel
        valuePanel.add(checkPanel);
        valuePanel.repaint();
        valuePanel.revalidate();

        //setup checkin
        membercontroller.resetForm(this);

        HargaDao harga = null;
        try {
            harga = Database.getHargaDao();
        } catch (SQLException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        List<Harga> list = null;
        try {
            list = harga.selectallHarga();
        } catch (HargaException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        int hrgv50 = list.get(0).getH50mbps();
        int hrgv30 = list.get(0).getH30mbps();
        int hrgv20 = list.get(0).getH20mbps();
        int hrgvip = list.get(0).getHvip();
        int hrgstd = list.get(0).getHstandard();
        int hrgempty = list.get(0).getHkosong();

        labelVvip.setText("Rp. " + Integer.toString(hrgvip));
        labelVstd.setText("Rp. " + Integer.toString(hrgstd));
        labelVkosong.setText("Rp. " + Integer.toString(hrgempty));
        labelV50.setText("Rp. " + Integer.toString(hrgv50));
        labelV30.setText("Rp. " + Integer.toString(hrgv30));
        labelV20.setText("Rp. " + Integer.toString(hrgv20));
    }//GEN-LAST:event_btnCheckActionPerformed

    private void btnMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMemberActionPerformed
        try {
            // TODO add your handling code here:
            loadDatatabel();
        } catch (SQLException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MemberException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        // sound /
        sound.soundClick();

        bodyPanel.setBackground(new Color(231, 76, 60));
        menuPanel.setBackground(new Color(192, 57, 43));
        btnLogout.setBackground(new Color(192, 57, 43));
        //remove panel
        valuePanel.removeAll();
        valuePanel.repaint();
        valuePanel.revalidate();

        //add panel
        valuePanel.add(memberPanel);
        valuePanel.repaint();
        valuePanel.revalidate();
    }//GEN-LAST:event_btnMemberActionPerformed

    private void btnPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPriceActionPerformed
        try {

            hargacontroller.selectdata(this);
        } catch (SQLException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (HargaException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        bodyPanel.setBackground(new Color(252, 92, 101));
        menuPanel.setBackground(new Color(235, 59, 90));
        btnLogout.setBackground(new Color(235, 59, 90));

        // sound /
        sound.soundClick();
        //remove panel
        valuePanel.removeAll();
        valuePanel.repaint();
        valuePanel.revalidate();

        //add panel
        valuePanel.add(pricePanel);
        valuePanel.repaint();
        valuePanel.revalidate();
    }//GEN-LAST:event_btnPriceActionPerformed

    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
        // TODO add your handling code here:
        bodyPanel.setBackground(new Color(224, 86, 253));
        menuPanel.setBackground(new Color(190, 46, 221));
        btnLogout.setBackground(new Color(190, 46, 221));

        // sound /
        sound.soundClick();
        //remove panel
        valuePanel.removeAll();
        valuePanel.repaint();
        valuePanel.revalidate();

        //add panel
        valuePanel.add(reportPanel);
        valuePanel.repaint();
        valuePanel.revalidate();
    }//GEN-LAST:event_btnReportActionPerformed

    private void btnPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPasswordActionPerformed
        // TODO add your handling code here:
        bodyPanel.setBackground(new Color(38, 222, 129));
        menuPanel.setBackground(new Color(32, 191, 107));
        btnLogout.setBackground(new Color(32, 191, 107));

        // sound /
        sound.soundClick();
        //remove panel
        valuePanel.removeAll();
        valuePanel.repaint();
        valuePanel.revalidate();

        //add panel
        valuePanel.add(passwordPanel);
        valuePanel.repaint();
        valuePanel.revalidate();

        try {
            //fungsi melihat tanggal
            lastC();
        } catch (SQLException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (AdminException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPasswordActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:

        int dialogBtn = JOptionPane.YES_NO_OPTION;
        int dialogResIult = JOptionPane.showConfirmDialog(this, "Anda yakin akan keluar?", "PERINGATAN", JOptionPane.WARNING_MESSAGE, dialogBtn);

        if (dialogResIult == 0) {
            //true condition
            System.exit(0);
        }
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnHomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMouseEntered
        // TODO add your handling code here:
        btnHome.setBackground(Color.orange);

    }//GEN-LAST:event_btnHomeMouseEntered

    private void btnHomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMouseExited
        // TODO add your handling code here:
        btnHome.setBackground(Color.white);
    }//GEN-LAST:event_btnHomeMouseExited

    private void btnCheckMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCheckMouseEntered
        // TODO add your handling code here:
        btnCheck.setBackground(Color.orange);
    }//GEN-LAST:event_btnCheckMouseEntered

    private void btnCheckMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCheckMouseExited
        // TODO add your handling code here:
        btnCheck.setBackground(Color.white);
    }//GEN-LAST:event_btnCheckMouseExited

    private void btnMemberMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMemberMouseEntered
        // TODO add your handling code here:
        btnMember.setBackground(Color.orange);
    }//GEN-LAST:event_btnMemberMouseEntered

    private void btnMemberMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMemberMouseExited
        // TODO add your handling code here:
        btnMember.setBackground(Color.white);
    }//GEN-LAST:event_btnMemberMouseExited

    private void btnPriceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPriceMouseEntered
        // TODO add your handling code here:
        btnPrice.setBackground(Color.orange);
    }//GEN-LAST:event_btnPriceMouseEntered

    private void btnPriceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPriceMouseExited
        // TODO add your handling code here:
        btnPrice.setBackground(Color.white);
    }//GEN-LAST:event_btnPriceMouseExited

    private void btnReportMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReportMouseEntered
        // TODO add your handling code here:
        btnReport.setBackground(Color.orange);
    }//GEN-LAST:event_btnReportMouseEntered

    private void btnReportMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReportMouseExited
        // TODO add your handling code here:
        btnReport.setBackground(Color.white);
    }//GEN-LAST:event_btnReportMouseExited

    private void btnPasswordMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPasswordMouseEntered
        // TODO add your handling code here:
        btnPassword.setBackground(Color.orange);
    }//GEN-LAST:event_btnPasswordMouseEntered

    private void btnPasswordMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPasswordMouseExited
        // TODO add your handling code here:
        btnPassword.setBackground(Color.white);
    }//GEN-LAST:event_btnPasswordMouseExited

    private void valueAlamatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valueAlamatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valueAlamatActionPerformed

    private void radiobVipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiobVipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radiobVipActionPerformed

    private void radiobStandardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiobStandardActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radiobStandardActionPerformed

    private void radiobEmptyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiobEmptyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radiobEmptyActionPerformed

    private void radiob50ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiob50ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radiob50ActionPerformed

    private void radiob30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiob30ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radiob30ActionPerformed

    private void radiob20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiob20ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radiob20ActionPerformed

    private void btnResetcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetcActionPerformed
        membercontroller.resetForm(this);
//        valueNama.setText("");
//    
//        valueAlamat.setText("");
//        valueSewa.setText("");
//        outputTotal.setText("");
//        bg1.clearSelection();
//        bg2.clearSelection();
//        bg3.clearSelection();

    }//GEN-LAST:event_btnResetcActionPerformed

    private void btnHitungcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHitungcActionPerformed

        try {
            membercontroller.count(this);
        } catch (SQLException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (HargaException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnHitungcActionPerformed

    private void btnResetReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetReportActionPerformed
        // TODO add your handling code here:
        reportCek.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY));
        rData.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY));
        rData.setText("0 Data");
        reportCek.setText("");
        reportcmbReset();

    }//GEN-LAST:event_btnResetReportActionPerformed

    private void radiobLakiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiobLakiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radiobLakiActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton8ActionPerformed

    private void valueSewaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valueSewaKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE) || (valueSewa.getText().length() == 2) || ",".equals(valueSewa.getText())) {
            evt.consume();
        }
    }//GEN-LAST:event_valueSewaKeyTyped

    private void valueNohpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valueNohpKeyTyped
        char c = evt.getKeyChar();
//        char[] val = new char[14];
//        for (int i = 0; i < val.length; i++) {
//            val[i] = c;
//        }
//        if (val[0] != '0') {
//            valueNohp.setText("");
//        }else if (val[1] != '8') {
//            valueNohp.setText("");
//        }
        if (!(Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE) || (valueNohp.getText().length() == 12)) {
            evt.consume();

        }
    }//GEN-LAST:event_valueNohpKeyTyped

    private void valueNamaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valueNamaKeyTyped
        char c = evt.getKeyChar();
        if ((valueNama.getText().length() == 30) || (c == KeyEvent.VK_BACK_SLASH)) {
            evt.consume();
        }
    }//GEN-LAST:event_valueNamaKeyTyped

    private void valueNamaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valueNamaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_valueNamaKeyPressed

    private void btnsimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsimpanActionPerformed
        try {
            // TODO add your handling code here:
            membercontroller.insertMember(this);
        } catch (SQLException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (HargaException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("click Simpan");
//        membercontroller.resetForm(this);
    }//GEN-LAST:event_btnsimpanActionPerformed


    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        try {
            // TODO add your handling code here:
            //        logic cancel
            hargacontroller.selectdata(this);
        } catch (SQLException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (HargaException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cancelActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            // TODO add your handling code here:
            hargacontroller.updateharga(this);
            //        hargacontroller.controllerHarga(this);
        } catch (HargaException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void ih30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ih30ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ih30ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            adminController.upPasswod(this);
        } catch (SQLException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (AdminException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void reportCekKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_reportCekKeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();
        if (reportCek.getText().length() == 30) {
            evt.consume();
        }


    }//GEN-LAST:event_reportCekKeyTyped
    public String ceknama;
    private void reportCekKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_reportCekKeyReleased
        int i = 0;
        Service_member_dao member = null;
        try {
            member = Database.getMemberDao();
        } catch (SQLException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        List<Member> cari = null;
        try {
            String vCari = reportCek.getText();
            if (reportCek.getText().isEmpty()) {
                reportCek.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY));
                rData.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY));
                rData.setText(Integer.toString(i) + " Data");
                reportcmbReset();

            } else {
                cari = member.cariMember(vCari);
                for (Member ss : cari) {
//                    ceknama = ss.getNama().toLowerCase();
                    i++;
                }
                if (cari.isEmpty()) {
                    reportCek.setBorder(BorderFactory.createLineBorder(Color.red));
                    rData.setBorder(BorderFactory.createLineBorder(Color.red));
                    rData.setText(Integer.toString(i) + " Data");
                    reportcmbReset();
                } else {
                    reportCek.setBorder(BorderFactory.createLineBorder(Color.green));
                    rData.setBorder(BorderFactory.createLineBorder(Color.red));
                    rData.setText(Integer.toString(i) + " Data");
                    cmbJumlahData.removeAllItems();
                    cmbJumlahData.addItem(Integer.toString(i));
                    cmbJumlahData.setSelectedIndex(0);
                }
            }

        } catch (MemberException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_reportCekKeyReleased

    private void valueCariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valueCariKeyReleased
        // TODO add your handling code here:
        int i = 0;
        String output = "";
        Service_member_dao member = null;
        try {
            member = Database.getMemberDao();
        } catch (SQLException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        List<Member> cari = null;
        try {
            String vCari = valueCari.getText();
            if (vCari.isEmpty()) {
                output = "Silahkan Isi Terlebih Dahulu";
                Output_pencarian.setText(output);
                Output_pencarian.setBorder(BorderFactory.createLineBorder(Color.gray));
                return;
            }
            cari = member.cariMember(vCari);
        } catch (MemberException ex) {
            Logger.getLogger(ViewMain.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (cari.isEmpty()) {
            output = "Nama Tidak Ditemukan";
            Output_pencarian.setText(output);
            Output_pencarian.setBorder(BorderFactory.createLineBorder(Color.red));
        } else {
            for (Member ss : cari) {
                i++;
                String nama = ss.getNama();
                String total = ss.getTotal().toString();
                String ex = ss.getExpire();
                output += "________________________________________________________\n";
                output += i + ".Nama : " + nama + " dan Total Biaya : " + total + " Masa Belaku :" + ex + "\n";
                output += "________________________________________________________\n";
            }
            Output_pencarian.setBorder(BorderFactory.createLineBorder(Color.green));
            Output_pencarian.setText(output);        // TODO add your handling code here:
        }

    }//GEN-LAST:event_valueCariKeyReleased

    private void valueNamaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valueNamaKeyReleased
        // TODO add your handling code here:
        membercontroller.setColorValidation(this);
    }//GEN-LAST:event_valueNamaKeyReleased

    private void valueAlamatKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valueAlamatKeyReleased
        // TODO add your handling code here:
        membercontroller.setColorValidation(this);
    }//GEN-LAST:event_valueAlamatKeyReleased

    private void valueSewaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valueSewaKeyReleased
        // TODO add your handling code here:
        membercontroller.setColorValidation(this);
    }//GEN-LAST:event_valueSewaKeyReleased

    private void valueNohpKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valueNohpKeyReleased
        // TODO add your handling code here:
        membercontroller.setColorValidation(this);
    }//GEN-LAST:event_valueNohpKeyReleased

    private void valueNohpFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_valueNohpFocusGained
        // TODO add your handling code here:

        if (valueNohp.getText().isEmpty()) {
            valueNohp.setText("08");
        }


    }//GEN-LAST:event_valueNohpFocusGained


          Edit editordelete = new Edit();
    private void btnEditDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditDeleteActionPerformed
 
            // TODO add your handling code here:
            editordelete.requestFocus();
            editordelete.datatable();
            System.out.println(editordelete.isFlagEdit());
                if(editordelete.isFlagEdit() == false){
                       editordelete.setFlagEdit(true);
                       editordelete.setVisible(true);
                }
             


    }//GEN-LAST:event_btnEditDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Output_pencarian;
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JButton btnCheck;
    private javax.swing.JButton btnEditDelete;
    private javax.swing.JButton btnHitungc;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnMember;
    private javax.swing.JButton btnPassword;
    private javax.swing.JButton btnPrice;
    private javax.swing.JButton btnReport;
    private javax.swing.JButton btnResetReport;
    private javax.swing.JButton btnResetc;
    private javax.swing.JButton btnsimpan;
    private javax.swing.JButton cancel;
    private javax.swing.JPanel checkPanel;
    private javax.swing.JComboBox<String> cmbJumlahData;
    private javax.swing.JComboBox<String> cmbTipekamar;
    private datechooser.beans.DateChooserCombo dccAkhir;
    private datechooser.beans.DateChooserCombo dccAwal;
    private javax.swing.JPanel homePanel;
    private javax.swing.JTextField iemp;
    private javax.swing.JTextField ih20;
    private javax.swing.JTextField ih30;
    private javax.swing.JTextField ih50;
    private javax.swing.JTextField istd;
    private javax.swing.JTextField ivip;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelAlamat;
    private javax.swing.JLabel labelHome20Mbps;
    private javax.swing.JLabel labelHome30Mbps;
    private javax.swing.JLabel labelHome50Mbps;
    private javax.swing.JLabel labelHomeKsng;
    private javax.swing.JLabel labelHomeStd;
    private javax.swing.JLabel labelHomeVip;
    private javax.swing.JLabel labelJk;
    private javax.swing.JLabel labelLaki;
    private javax.swing.JLabel labelNama;
    private javax.swing.JLabel labelNama4;
    private javax.swing.JLabel labelNama5;
    private javax.swing.JLabel labelNohp;
    private javax.swing.JLabel labelPerempuan;
    private javax.swing.JLabel labelSewa;
    private javax.swing.JLabel labelTipekamar;
    private javax.swing.JLabel labelTotal;
    private javax.swing.JLabel labelV20;
    private javax.swing.JLabel labelV30;
    private javax.swing.JLabel labelV50;
    private javax.swing.JLabel labelVkosong;
    private javax.swing.JLabel labelVstd;
    private javax.swing.JLabel labelVvip;
    private javax.swing.JLabel labelWifi;
    private javax.swing.JLabel labelheaderkamar;
    private javax.swing.JLabel labelheaderkamar1;
    private javax.swing.JLabel labelstandard;
    private javax.swing.JLabel labelstandard1;
    private javax.swing.JLabel labelvip;
    private javax.swing.JLabel labelvip1;
    private javax.swing.JPanel memberPanel;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JLabel outputTotal;
    private javax.swing.JPanel panelInfo;
    private javax.swing.JPanel passwordPanel;
    private javax.swing.JPanel pricePanel;
    private javax.swing.JPanel rBg;
    private javax.swing.JLabel rData;
    private javax.swing.JRadioButton radiob20;
    private javax.swing.JRadioButton radiob30;
    private javax.swing.JRadioButton radiob50;
    private javax.swing.JRadioButton radiobEmpty;
    private javax.swing.JRadioButton radiobLaki;
    private javax.swing.JRadioButton radiobStandard;
    private javax.swing.JRadioButton radiobVip;
    private javax.swing.JRadioButton radiobperempuan;
    private javax.swing.JTextField reportCek;
    private javax.swing.JPanel reportPanel;
    private javax.swing.JTable tabelmember;
    private javax.swing.JLabel title;
    private javax.swing.JLabel totalMember;
    private javax.swing.JLabel totalPendapatan;
    private javax.swing.JLabel txtChangeP;
    private javax.swing.JPasswordField txtPasswordBaru;
    private javax.swing.JPasswordField txtPasswordLama;
    private javax.swing.JPasswordField txtValidPassword;
    private javax.swing.JTextField valueAlamat;
    private javax.swing.JTextField valueCari;
    private javax.swing.JTextField valueNama;
    private javax.swing.JTextField valueNohp;
    private javax.swing.JPanel valuePanel;
    private javax.swing.JTextField valueSewa;
    // End of variables declaration//GEN-END:variables

}
